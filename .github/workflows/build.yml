name: Build


on:
  workflow_call:
    outputs:
      BACKEND_ARTIFACT_NAME:
        description: Unique name of the uploaded backend artifact
        value: ${{ jobs.build-backend.outputs.BACKEND_ARTIFACT_NAME }}
      FRONTEND_ARTIFACT_NAME:
        description: Unique name of the uploaded frontend artifact
        value: ${{ jobs.build-frontend.outputs.FRONTEND_ARTIFACT_NAME }}


permissions:
  contents: read
  pull-requests: write


jobs:

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    env:
      BACKEND_ARTIFACT_NAME: backend
    outputs:
      BACKEND_ARTIFACT_NAME: ${{ env.BACKEND_ARTIFACT_NAME }}

    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version-file: ./backend/.python-version

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: ./backend/uv.lock

      - working-directory: ./backend/
        run: uv run build.py

      - name: Store Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BACKEND_ARTIFACT_NAME }}
          path: backend/dist/lambda.zip
          overwrite: true


  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    env:
      FRONTEND_ARTIFACT_NAME: frontend
    outputs:
      FRONTEND_ARTIFACT_NAME: ${{ env.FRONTEND_ARTIFACT_NAME }}

    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: ./ui/package.json
          cache: npm
          cache-dependency-path: ./ui/package-lock.json

      - working-directory: ./ui/
        run: npm ci

      - working-directory: ./ui/
        run: npm run build

      - name: Store Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FRONTEND_ARTIFACT_NAME }}
          path: ui/dist/
          overwrite: true
